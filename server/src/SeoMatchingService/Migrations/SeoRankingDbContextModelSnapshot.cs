// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeoMatchingService.Infrastructure;

#nullable disable

namespace SeoMatchingService.Migrations
{
    [DbContext(typeof(SeoRankingDbContext))]
    partial class SeoRankingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SeoMatchingService.Infrastructure.Entities.SeoRankSearchedEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CompareUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("compared_url");

                    b.Property<string>("SearchEngine")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("search_engine");

                    b.Property<DateTime>("SearchedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("searched_at");

                    b.Property<string>("SearchedValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("searched_value");

                    b.Property<string>("SeoRanks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("seo_ranks");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("SearchEngine");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("SearchEngine"), false);

                    b.HasIndex("SearchedAt");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("SearchedAt"), false);

                    b.HasIndex("SearchedAt", "SearchEngine");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("SearchedAt", "SearchEngine"), false);

                    b.ToTable("seo_rank_searched", (string)null);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });
#pragma warning restore 612, 618
        }
    }
}
